/*
 * todo: write cases for while loops
 * todo: Floating point opers need an "f." after them to print correctly
 * todo: Assignment operators aren't working in forth
 */

/* Tests that don't work in forth */
[[:= x 5]]
[[not 3.0]] /* Is this even semantically correct? */
[[+ 2.5 [+ 2 4]]]
[[+ 3 5.0]]

/* Paul's test (need to not output dot at the end so it doesn't stack underflow in forth) */
[[if[>= 1200e-6 1][stdout [sin 3.14]] [stdout [or true false]]]]


/* Test if our parse tree will typecheck and convert ints to floats */
[[:= x 5.9]]
/*
[[+ 2.5 3]]
[[+ 3 2.5]]
[3.2]
[[+ 3.0 3]]
[[+ 3 3.0]]
[[+ 3 [+ 3.0 3.0]]]
[[:= x [+ 2 3.0]]]
[[:= x [:= y [:= z [+ 5.2 4]]]]]
[[+ 5.0 [-3 2]]]
[[+10.1.1]]
[[+ [* 3 5] 7]]
[[/ 3 5]]
[[/ 4.0 3.0]]
*/
/*
[[+ "Hello " "World"]]
[[or false false]]
[[or true false]]
[[or true true]]
[[and true true]]
[[and true false]]
[[and false false]]
[[not false]]
[[not true]]
*/

/* Statements and expressions */
/*
[[* 10 5]]
[2.45e-1 3.56]
*/

/* Binops */
/*
[[+ [+ 1 2] 2]]
[1 2]
[y 2]
[y [2]]
[[let [[y float]]] [:= y 3.0]]
[[let [[y int]]] [:= y 3]]
[[+ 3 5]]
[[+ 4.0 3.0]]
[[- 3 5]]
[[- 4.0 3.0]]
[[* 3 5]]
[[* 4.0 3.0]]
[[^ 3 5]]
[[^ 4.0 3.0]]
[[!= 3 5]]
[[!= 4.0 3.0]]
[[>= 3 5]]
[[>= 4.0 3.0]]
[[<= 3 5]]
[[<= 4.0 3.0]]
[[< 3 5]]
[[< 4.0 3.0]]
[[> 3 5]]
[[> 4.0 3.0]]
[[= 3 5]]
[[= 4.0 3.0]]
[[% 3 5]]
[[% 4.0 3.0]]
[[^ 3 5]]
[[^ 4.0 3.0]]
[[or 1 1]]
[[or 1.0 1.0]]
[[and 1 1]]
[[and 1.0 1.0]]
*/

/* Unops */
/*
[[tan 45]]
[[tan 45.0]]
[[cos 45]]
[[cos 45.0]]
[[sin 45]]
[[sin 45.0]]
[[- 5]]
[[- 5.0]]
[[not 0]]
*/
/* Statements */
/*
[[if [> 2 3] [stdout "yes"] [stdout "no"]]]
*/
/*
[while [> x 5] [[stdout "hello"] [:= x [- x 1]]]]
*/